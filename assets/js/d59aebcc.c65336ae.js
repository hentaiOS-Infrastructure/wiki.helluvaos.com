"use strict";(self.webpackChunkhentaiwiki=self.webpackChunkhentaiwiki||[]).push([[127],{2454:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"technical-data/security","title":"Security","description":"This section describes the security requirements for the device.","source":"@site/docs/technical-data/security.md","sourceDirName":"technical-data","slug":"/technical-data/security","permalink":"/docs/technical-data/security","draft":false,"unlisted":false,"editUrl":"https://github.com/hentaiOS-Infrastructure/wiki-frontpage-develop/edit/master/docs/technical-data/security.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"Performance","permalink":"/docs/technical-data/performance"},"next":{"title":"Planned Maintenance FAQ","permalink":"/docs/infra/scheduled-maint-faq"}}');var r=i(123),s=i(9161);const o={},a="Security",c={},d=[{value:"Android Verified Boot",id:"android-verified-boot",level:2},{value:"Integrating with Buildsystem",id:"integrating-with-buildsystem",level:3},{value:"End-User Root of Trust Configuration",id:"end-user-root-of-trust-configuration",level:2},{value:"Normal Devices",id:"normal-devices",level:3}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"security",children:"Security"})}),"\n",(0,r.jsx)(t.p,{children:"This section describes the security requirements for the device."}),"\n",(0,r.jsx)(t.h2,{id:"android-verified-boot",children:"Android Verified Boot"}),"\n",(0,r.jsx)(t.p,{children:"Verified Boot is the process of verifying the integrity of the Android operating system.\nIt typically starts with a read-only portion of the device firmware which loads\ncode and executes it only if the integrity of the device is verified."}),"\n",(0,r.jsx)(t.h3,{id:"integrating-with-buildsystem",children:"Integrating with Buildsystem"}),"\n",(0,r.jsxs)(t.p,{children:["Refer to ",(0,r.jsx)(t.a,{href:"https://android.googlesource.com/platform/external/avb/+/refs/tags/android-11.0.0_r39/README.md#build-system-integration",children:"Android Verified Boot 2.0 Build System Integration"})," for details on how to integrate verified boot into your build system."]}),"\n",(0,r.jsxs)(t.p,{children:["Before getting started, Our private keys are available in ",(0,r.jsx)(t.code,{children:"private_keys"})," repository. Clone the repository to ",(0,r.jsx)(t.code,{children:"vendor/hentai/build/target/product/security"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["AVB is enabled with ",(0,r.jsx)(t.code,{children:"BOARD_AVB_ENABLE"})," variable."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-Blueprint",children:"BOARD_AVB_ENABLE := true\n"})}),"\n",(0,r.jsxs)(t.p,{children:["By default, the algorithm ",(0,r.jsx)(t.code,{children:"SHA256_RSA4096"})," is used with keys from ",(0,r.jsx)(t.code,{children:"vendor/hentai/build/target/product/security"})," directory."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-Blueprint",children:"BOARD_AVB_ALGORITHM := SHA256_RSA4096\nBOARD_AVB_KEY_PATH := $(PROD_CERTS)/hentai_rsa4096.pem\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Devices with ",(0,r.jsx)(t.code,{children:"vbmeta"})," partitions should configured to use ",(0,r.jsx)(t.a,{href:"https://android.googlesource.com/platform/external/avb/+/refs/tags/android-11.0.0_r39/README.md#chained-partitions",children:"chained partitions"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-Blueprint",children:"BOARD_AVB_VBMETA_SYSTEM := system system_ext\nBOARD_AVB_VBMETA_SYSTEM_KEY_PATH := $(PROD_CERTS)/hentai_rsa2048.pem\nBOARD_AVB_VBMETA_SYSTEM_ALGORITHM := SHA256_RSA2048\nBOARD_AVB_VBMETA_SYSTEM_ROLLBACK_INDEX_LOCATION := 1\n"})}),"\n",(0,r.jsxs)(t.p,{children:["To prevent rollback attacks, the rollback index location should be set to a value greater than 0 and increased on a regular basis (we sets our index as our Security Patch timestamp). The rollback index can be set with the ",(0,r.jsx)(t.code,{children:"BOARD_AVB_VBMETA_ROLLBACK_INDEX"})," variable:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-Blueprint",children:"BOARD_AVB_VBMETA_SYSTEM_ROLLBACK_INDEX := $(PLATFORM_SECURITY_PATCH_TIMESTAMP)\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Some devices support the end-user configuring the root of trust to use, in this case, see ",(0,r.jsx)(t.a,{href:"#end-user-root-of-trust-configuration",children:"End-User Root of Trust Configuration"})," for details."]}),"\n",(0,r.jsx)(t.h2,{id:"end-user-root-of-trust-configuration",children:"End-User Root of Trust Configuration"}),"\n",(0,r.jsx)(t.p,{children:"This section describes the end-user configuration of the root of trust."}),"\n",(0,r.jsx)(t.h3,{id:"normal-devices",children:"Normal Devices"}),"\n",(0,r.jsxs)(t.p,{children:["On sane devices, the boot loader supports a virtual partition with the name ",(0,r.jsx)(t.code,{children:"avb_custom_key"}),". Flashing and erasing this partition only works in the UNLOCKED state. Setting the custom key is done like this:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-Blueprint",children:"avbtool extract_public_key --key key.pem --output pkmd.bin\nfastboot flash avb_custom_key pkmd.bin\n"})}),"\n",(0,r.jsx)(t.p,{children:"Erasing the key is done by erasing the virtual partition:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-Blueprint",children:"fastboot erase avb_custom_key\n"})}),"\n",(0,r.jsx)(t.p,{children:"When the custom key is set and the device is in the LOCKED state it will boot images signed with both the built-in key as well as the custom key. All other security features (including rollback-protection) are in effect, e.g. the only difference is the root of trust to use."}),"\n",(0,r.jsx)(t.p,{children:"When booting an image signed with a custom key, a yellow screen will be shown as part of the boot process to remind the user that the custom key is in use."})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},9161:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>a});var n=i(1467);const r={},s=n.createContext(r);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);