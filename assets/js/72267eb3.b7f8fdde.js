"use strict";(self.webpackChunkhentaiwiki=self.webpackChunkhentaiwiki||[]).push([[127],{6104:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:5},o="Performance",l={unversionedId:"technical-data/performance",id:"technical-data/performance",title:"Performance",description:"Some minimum performance criteria are critical to the user experience and impact the baseline assumptions users would have when running an app.",source:"@site/docs/technical-data/performance.md",sourceDirName:"technical-data",slug:"/technical-data/performance",permalink:"/docs/technical-data/performance",draft:!1,editUrl:"https://github.com/hentaiOS-Infrastructure/wiki-frontpage-develop/edit/master/docs/technical-data/performance.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"mainSidebar",previous:{title:"Device Requirements",permalink:"/docs/technical-data/device-requirements"},next:{title:"Security",permalink:"/docs/technical-data/security"}},c={},s=[{value:"User Experience Consistency",id:"user-experience-consistency",level:2},{value:"Scheduler",id:"scheduler",level:2},{value:"General Linux Kernel",id:"general-linux-kernel",level:2},{value:"ZRAM",id:"zram",level:3},{value:"The use of compilation flags",id:"the-use-of-compilation-flags",level:3},{value:"Kernel Default Configurations",id:"kernel-default-configurations",level:3},{value:"IRQ",id:"irq",level:2},{value:"MSM-IRQBalance",id:"msm-irqbalance",level:3}],u={toc:s},d="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"performance"},"Performance"),(0,r.kt)("p",null,"Some minimum performance criteria are critical to the user experience and impact the baseline assumptions users would have when running an app."),(0,r.kt)("h2",{id:"user-experience-consistency"},"User Experience Consistency"),(0,r.kt)("p",null,"A smooth user interface can be provided to the end user if there are certain minimum requirements to ensure a consistent frame rate and response time for applications and games. Builds, depending on device type, MAY have measurable requirements for user interface latency and task switching."),(0,r.kt)("h2",{id:"scheduler"},"Scheduler"),(0,r.kt)("p",null,"Performance can fluctuate dramatically for high-performance long-running apps, either because of the other apps running in the background or the CPU throttling due to scheduler."),(0,r.kt)("p",null,"Maintainers:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[C-0-0]"," MUST NOT using Touch Boosting and instead, use libperf and uclamp."),(0,r.kt)("li",{parentName:"ul"},"[C-0-1]"," MUST implement efficient frequency into libperf through Power Hints.\nWe suggest that you avoid assigning CPU 0 and 1 to tasks other than TA (Top-App) as that it's generally utilizing CPU 0 and 1 extensively."),(0,r.kt)("li",{parentName:"ul"},"[C-0-2]"," MUST NOT overly boosting everything, because ",(0,r.kt)("strong",{parentName:"li"},'Performance is not "all-about-boosting".')," Efficiency is all that matters in this case, for getting efficient frequencies, you can use ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/kdrag0n/freqbench"},"freqbench"),"."),(0,r.kt)("li",{parentName:"ul"},"[D-SR]"," STRONGLY RECOMMENDED to tune your CPUSet according to your SoC, every SoC has its specific CPUSet tuning, so make sure you correctly tune it according to your SoC."),(0,r.kt)("li",{parentName:"ul"},"[C-SR]"," STRONGLY RECOMMENDED to ship efficient frequency data inside kernel."),(0,r.kt)("li",{parentName:"ul"},"[C-SR]"," STRONGLY RECOMMENDED to ship ",(0,r.kt)("a",{parentName:"li",href:"https://lwn.net/Articles/531853/"},"PELT")," instead of ",(0,r.kt)("a",{parentName:"li",href:"https://wiki.codeaurora.org/xwiki/bin/QKERNEL/Window%20Assisted%20Load%20Tracking/"},"WALT"),"."),(0,r.kt)("li",{parentName:"ul"},"[C-SR]"," STRONGLY RECOMMENDED to ship PELT Util Halflife by picking or forward-porting (for Linux 4.19.y upwards) ",(0,r.kt)("a",{parentName:"li",href:"https://android.googlesource.com/kernel/common/+/cb22d9159761cb32c35a5f9399b8011fcdae654b"},"kernel/common/cb22d9159761cb32c35a5f9399b8011fcdae654b")," and ",(0,r.kt)("a",{parentName:"li",href:"https://android.googlesource.com/kernel/common/+/3c207c880674e5d29aa1c9b7e94d812383c442ee"},"kernel/common/3c207c880674e5d29aa1c9b7e94d812383c442ee"),"."),(0,r.kt)("li",{parentName:"ul"},"[C-SR]"," STRONGLY RECOMMENDED to ship Google's workaround for Unity Engine CPU Affinity by picking ",(0,r.kt)("a",{parentName:"li",href:"https://android.googlesource.com/device/google/redbull/+/69a034bb62b8841c1774617fb9b7af0ccf475b1e"},"google/redbull/69a034bb62b8841c1774617fb9b7af0ccf475b1e")," and ",(0,r.kt)("a",{parentName:"li",href:"https://android.googlesource.com/device/google/redbull/+/a5137c1c9150e6617d2d62575789455bedcfd27d"},"google/redbull/a5137c1c9150e6617d2d62575789455bedcfd27d"),".")),(0,r.kt)("h2",{id:"general-linux-kernel"},"General Linux Kernel"),(0,r.kt)("h3",{id:"zram"},"ZRAM"),(0,r.kt)("p",null,"If Maintainers include ZRAM, they:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[C-SR]"," STRONGLY RECOMMENDED ship ZRAM depending on your device RAM size."),(0,r.kt)("li",{parentName:"ul"},"[C-SR]"," STRONGLY RECOMMENDED to keep compression backend up-to-date as possible with Mainline."),(0,r.kt)("li",{parentName:"ul"},"[C-1-0]"," MUST NOT keeping the ZRAM compression backend in LZO. We recommend you to use Zstandard (zstd) as default ZRAM and ZSWAP (if your devices use this, Smugsungs?) compression backend as it'll be beneficial for the compression ratio and faster compared to LZO, you also can use lz4 for the compression backend if you favoring performance over compression ratio by picking ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/torvalds/linux/commit/3d711a382735d2c34d3ba2075a5aa83a894f4a57"},"linus/torvalds/3d711a382735d2c34d3ba2075a5aa83a894f4a57"),".")),(0,r.kt)("h3",{id:"the-use-of-compilation-flags"},"The use of compilation flags"),(0,r.kt)("p",null,"Maintainers:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[C-0-1]"," MUST NOT generically build your builds with generic CPU variant. Use your SoC-specific optimization flags instead.")),(0,r.kt)("h3",{id:"kernel-default-configurations"},"Kernel Default Configurations"),(0,r.kt)("p",null,"Maintainers:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[D-0-1]",' MUST ship kernel default configuration (known as "defconfig") as-is without any masking.'),(0,r.kt)("li",{parentName:"ul"},"[D-SR]"," STRONGLY RECOMMENDED to follows ",(0,r.kt)("a",{parentName:"li",href:"https://android.googlesource.com/kernel/configs/"},"kernel/configs"),".")),(0,r.kt)("h2",{id:"irq"},"IRQ"),(0,r.kt)("h3",{id:"msm-irqbalance"},"MSM-IRQBalance"),(0,r.kt)("p",null,"Qualcomm includes support for balancing IRQ to help balance the CPU load generated by interrupts across all of a systems CPUs, to configuring MSM-IRQBalance, Maintainers:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[C-SR]"," STRONGLY RECOMMENDED to Divide the IRQ's affinity, ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/AOSPA/android_device_oneplus_sdm845-common/commit/e317060e5e03b11787ad727a6e08c204f7b39d13"},"Example commit from AOSPA OnePlus-sdm845"),"."),(0,r.kt)("li",{parentName:"ul"},"[C-SR]"," STRONGLY RECOMMENDED to blacklist msm_drm and kgsl_3d0 IRQs, ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/AOSPA/android_device_oneplus_sdm845-common/commit/7e590e891ac9b3b83d95543b88a1516a016038f5"},"Example commit from AOSPA OnePlus-sdm845"),", keep in mind that changes may vary between all devices, so make sure you blacklisted the correct IRQ.")))}p.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return n?a.createElement(f,o(o({ref:t},u),{},{components:n})):a.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);